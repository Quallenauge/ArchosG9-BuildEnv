#!/bin/bash

#exit on first error
set -e

export BUILD_PWD=`pwd`

export CYANOGEN_BASE_PATH=$BUILD_PWD/cm-11.0
export CYANOGEN_PRODUCT_PATH=$CYANOGEN_BASE_PATH/out/target/product/archos_g9

export DESTINATION_PATH=$BUILD_PWD/archos_image


echo "Build PWD: $BUILD_PWD"

function callRepo
{
   shift
   echo "Calling repo command in repository: $CYANOGEN_BASE_PATH with params: $*"
   cd $CYANOGEN_BASE_PATH
   repo $*
   cd $BUILD_PWD
}

function inject
{
  echo "Injecting propritary files for archos device..."
  cp -rpv $BUILD_PWD/android_injection/* $CYANOGEN_BASE_PATH/
}

function buildImage
{
echo "Mounting base image..."
sudo mount $DESTINATION_PATH/archos.ext4.update $DESTINATION_PATH/mount/

echo "Clear image..."
sudo rm -rf $DESTINATION_PATH/mount/*

echo "Extracting base image"
sudo tar xfj archos_base_image.tar.bz2 -C $DESTINATION_PATH/mount/

# Base image has an tmp folder. I'm too lazy to change the image and upload a new one...so modify does also the trick.
if [ -e $DESTINATION_PATH/mount/tmp ];
then
  sudo rm -rf $DESTINATION_PATH/mount/tmp
fi

echo "Copy root folder from cyanogen mod..."
sudo cp -rf $CYANOGEN_PRODUCT_PATH/root/* $DESTINATION_PATH/mount/

echo "Copy system folder from cyanogen mod..."
sudo cp -rf $CYANOGEN_PRODUCT_PATH/system $DESTINATION_PATH/mount/

echo "Copy gapps package..."
sudo cp -rf $DESTINATION_PATH/gapps/system $DESTINATION_PATH/mount/

echo "Copy init.rc and ueventd.rc ..."
sudo cp $CYANOGEN_BASE_PATH/device/archos/archos_g9/prebuilt/root/ueventd.rc $DESTINATION_PATH/mount/ueventd.rc

sudo chmod 0755 $DESTINATION_PATH/mount/system/vendor/bin/*

echo "Set permissions for su"
echo "Avoiding the suid bit - this doesn't work on Android 4.3..."
sudo chown 0:0 $DESTINATION_PATH/mount/system/xbin/su
sudo chmod 06755 $DESTINATION_PATH/mount/system/bin/su
sudo chown 0:0 $DESTINATION_PATH/mount/system/bin/su
sudo chmod 0755 $DESTINATION_PATH/mount/system/bin/su

echo "Removing sgx544 libraries"
sudo find $DESTINATION_PATH/mount/system/vendor/lib/ -name "*544*" -exec rm {} +

echo "Correcting permission for initd and compcache binaries"
#sudo chmod 0755 $DESTINATION_PATH/mount/system/bin/handle_compcache
#sudo chmod 0755 $DESTINATION_PATH/mount/system/bin/compcache
sudo chmod 0755 $DESTINATION_PATH/mount/system/bin/sysinit

echo "Unmounting base image..."
sudo umount $DESTINATION_PATH/mount

echo "Archos image is at the following position:"
echo "$DESTINATION_PATH/archos.ext4.update"
echo "If you want to mount it use:"
echo "sudo mount $DESTINATION_PATH/archos.ext4.update $DESTINATION_PATH/mount/"
echo "If you want to transfer it to archos device use:"
echo "adb push $DESTINATION_PATH/archos.ext4.update /data/media/ && adb reboot"
}

function makeProject
{
export USE_LINARO_COMPILER_FLAGS=yes
export ANDROID_EABI_TOOLCHAIN_DIR=linaro-4.8
export ARM_EABI_TOOLCHAIN_DIR=linaro-4.8

    echo "$CYANOGEN_BASE_PATH: Rebuilding bionic headers, based from external/kernel-headers package"
    cd $CYANOGEN_BASE_PATH

    if [ $1 != "nobionic" ]; then
	echo "Update bionic kernel headers..."
	./bionic/libc/kernel/tools/update_all.py
    fi

    inject

    if [ $1 == "clean" ]; then
	echo "Cleaning target output folder..."
	rm -rf out/target
    fi

    echo "Now building the project..."
    #. build/envsetup.sh && lunch cm_archos_g9-userdebug && mka update-api && mka ${@:2}
    . build/envsetup.sh && lunch cm_archos_g9-userdebug && mka ${@:2}
    cd $BUILD_PWD
}

function cleanGitRepos
{
    callRepo repo forall -c git reset --hard
    callRepo repo forall -c git clean -fd
    $CYANOGEN_BASE_PATH/vendor/cm/get-prebuilts
}

function prepareLinaroToolChain
{
    TAR_FILE=android-toolchain-eabi-4.8-2014.01-x86.tar.bz2
    cd $CYANOGEN_BASE_PATH
    wget -c http://releases.linaro.org/14.01/components/android/toolchain/4.8/$TAR_FILE
    cd $CYANOGEN_BASE_PATH/prebuilts/gcc/linux-x86/arm
    tar -xvjf ../../../../$TAR_FILE
    if [ -e linaro-4.8 ]; then
	rm -rf linaro-4.8
    fi
    mv android-toolchain-eabi linaro-4.8
}

function applyCherryPicks
{
    set +e
    echo "Performing cherry-picks..."

     # Update ccache to aosp version 3.1 which is faaast
#     cd $CYANOGEN_BASE_PATH/prebuilts/misc
#     git fetch https://android.googlesource.com/platform/prebuilts/misc refs/changes/22/66622/1 && git cherry-pick FETCH_HEAD

#    # wl127x/wl128x: add firmware from linux-firmware.git
#    # http://review.cyanogenmod.org/#/c/57983/
     #cd $CYANOGEN_BASE_PATH/hardware/ti/wlan
     #git fetch http://review.cyanogenmod.org/CyanogenMod/android_hardware_ti_wlan refs/changes/83/57983/2 && git cherry-pick FETCH_HEAD

#    # Add backports-3.12-1 drivers
     #cd $CYANOGEN_BASE_PATH/hardware/ti/wlan
     #git fetch http://review.cyanogenmod.org/CyanogenMod/android_hardware_ti_wlan refs/changes/82/57982/3 && git cherry-pick FETCH_HEAD

#    # backports: Add wl12xx defconfig
     #cd $CYANOGEN_BASE_PATH/hardware/ti/wlan
     #git fetch http://review.cyanogenmod.org/CyanogenMod/android_hardware_ti_wlan refs/changes/84/57984/2 && git cherry-pick FETCH_HEAD

     # WLAN - wl12xx: Update to R5.SP7.01 from R5.SP5.01 package
     # http://review.cyanogenmod.org/#/c/58549/
#     cd $CYANOGEN_BASE_PATH/hardware/ti/wlan
#     git fetch http://review.cyanogenmod.org/CyanogenMod/android_hardware_ti_wlan refs/changes/49/58549/1 && git cherry-pick FETCH_HEAD

     # SUPL early data connection fix
     #http://review.cyanogenmod.org/#/c/57621/
     cd $CYANOGEN_BASE_PATH/frameworks/base
     #git fetch http://review.cyanogenmod.org/CyanogenMod/android_frameworks_base refs/changes/21/57621/4 && git cherry-pick FETCH_HEAD
     
     cd $CYANOGEN_BASE_PATH/hardware/ril    
    
     # Set USE_NP based on HAVE_PTHREAD_COND_TIMEDWAIT_RELATIVE
     git fetch http://review.cyanogenmod.org/CyanogenMod/android_hardware_ril refs/changes/50/59050/1 && git cherry-pick FETCH_HEAD

     cd $CYANOGEN_BASE_PATH/bionic
     # libm: use neon optimized sin/cos/pow/sqrt/sqrtf
     # git fetch http://review.cyanogenmod.org/CyanogenMod/android_bionic refs/changes/27/59527/1 && git cherry-pick FETCH_HEAD

     cd $CYANOGEN_BASE_PATH/frameworks/base
     # Restore pre-KitKat permissions to external sd for all apps
     # http://review.cyanogenmod.org/#/c/62028/
     git fetch http://review.cyanogenmod.org/CyanogenMod/android_frameworks_base refs/changes/28/62028/2 && git cherry-pick FETCH_HEAD

     cd $CYANOGEN_BASE_PATH/frameworks/av/media/libstagefright/mpeg2ts/
     # Seems to crash ZDF mediathek livestream
     # git revert -n 5f648ff6

     cd $CYANOGEN_BASE_PATH/system/vold
     git fetch http://review.cyanogenmod.org/CyanogenMod/android_system_vold refs/changes/30/62530/3 && git cherry-pick FETCH_HEAD


     # Apply: Fix "FIONREAD not done before read" error 
     cd $CYANOGEN_BASE_PATH/external/bluetooth/bluedroid
     git remote remove Quallenauge_bluedroid; git remote add Quallenauge_bluedroid https://github.com/Quallenauge/android_external_bluetooth_bluedroid.git && git fetch Quallenauge_bluedroid && \
     git cherry-pick 1fd6d85d2bbcbbfbc6f50b92f6a5c06d32243c8a
     

     cd $CYANOGEN_BASE_PATH/frameworks/base
     #git fetch http://review.cyanogenmod.org/CyanogenMod/android_frameworks_base refs/changes/14/66314/1 && git cherry-pick FETCH_HEAD

     set -e
     # GCC - Optimizations
     cd $CYANOGEN_BASE_PATH/build
     # 
     git remote remove JustArchi_Build; git remote add JustArchi_Build https://github.com/JustArchi/android_build.git && git fetch JustArchi_Build && \
     git cherry-pick --strategy=recursive -Xours 0cf89401cc8092dda959b5746ec4899fda756cec && \
     git cherry-pick bb1d7f11ef866d829c7966a036a4b3a7d7519595
  
     cd $CYANOGEN_BASE_PATH/frameworks/av 
     git remote remove temasek; git remote add temasek https://github.com/temasek/android_frameworks_av.git && git fetch temasek && git cherry-pick 31943d4724f0fb79235eae131f8d02ff6e97ddce

     # Bash fix for "undefined reference to 'wctomb'"
     cd $CYANOGEN_BASE_PATH/external/bash
     git remote remove DJL10-2_BASH; git remote add DJL10-2_BASH https://github.com/Quallenauge/android_external_bash.git && git fetch DJL10-2_BASH && \
     git cherry-pick f6dd843d502e7227ed80d53ba0625bb9e75bdaff && \
     git cherry-pick d8e8146df5639f0ddc7c24d4a33923718b1966f7


     #git remote remove DJL10-2_BASH; git remote add DJL10-2_BASH https://github.com/DJL10-2/android_external_bash.git && git fetch DJL10-2_BASH && \
     #git cherry-pick 1ff746e4ce40ed7b58598b63f05b036f5b2b3120 && \
     #git cherry-pick d8e8146df5639f0ddc7c24d4a33923718b1966f7

     # Art fix
     cd $CYANOGEN_BASE_PATH/art
     git remote remove JustArchi_ART; git remote add JustArchi_ART https://github.com/JustArchi/android_art.git && git fetch JustArchi_ART && \
     git cherry-pick 8354d2dc9d260ca67dbdf32e123bd4da62b8a68d

}

case "$1" in
"repo")
	callRepo $*
;;
"buildImage")
	buildImage
;;
"make")
	makeProject dummyArg ${@:2}
;;
"makeLight")
	makeProject nobionic ${@:2}
;;

"makeFull")
	makeProject clean ${@:2}
;;
"reset")
	cleanGitRepos
;;
"inject")
	inject
;;
"prepareLinaro")
	prepareLinaroToolChain
;;
"sync")
  echo "Perform an inject to ensure that changes are not overwritten..."
  if [ $# -eq 1 ];then
    echo "Injecting data"
    inject
  fi

  dateStr=`date +"%d_%m_%Y-%H_%M_%S"`
  LAST_REV_FILE=$BUILD_PWD/lastRevs.txt
  cd $CYANOGEN_BASE_PATH
  if [ -e $LAST_REV_FILE ]; then
    echo "Last sync wasn't successful...using last revisions"
  else
    echo "Creating new revision file"
    repo forall -c 'echo "`pwd`|`git rev-parse HEAD`"' >$LAST_REV_FILE
  fi
  echo "Updating repo...."
#  cd $CYANOGEN_PRODUCT_PATH
  cd $CYANOGEN_BASE_PATH
  repo sync
  if [ 0 == $? ]; then
    echo "Apply cherry picks..."
    applyCherryPicks  

    echo "Sync was successful...creating changelog now"
    OUT_FILE=$BUILD_PWD/Changes_$dateStr.txt
    set -e

    echo "" >$OUT_FILE

    while read line; do
      #echo "$line"
      FOLDER=`echo $line | cut -d'|' -f1`
      HASH=`echo $line | cut -d'|' -f2`

      #echo "Folder=$FOLDER"
      #echo "Hash=$HASH"
      if [ ! -d $FOLDER ]; then
          continue;
      fi
      cd $FOLDER      
      echo "Checking $FOLDER"
#     if [ `git rev-list --max-count=2 --all | wc -l` -eq 1 ]; then
#       echo "Skipping repo, because only one commit available"
#       continue
#     fi
      NEW_HASH=`git rev-parse HEAD`
      if [ "$NEW_HASH" != "$HASH" ]; then
        echo "Folder $FOLDER has changed... $NEW_HASH != $HASH"
        echo "-----------------------------------------------------------------" >>$OUT_FILE
        echo "$FOLDER $HASH..$NEW_HASH" >>$OUT_FILE
        set +e
        git log $HASH..$NEW_HASH >>$OUT_FILE
        set -e
        #git log $NEW_HASH..$HASH >>$OUT_FILE
      fi
    done < $LAST_REV_FILE
  fi
  echo "Backup last revision file..."
  mv $LAST_REV_FILE "$LAST_REV_FILE"_"$dateStr"
  cd $BUILD_PWD
;;
"release")
	makeProject dummyArg ${@:2} 2>&1 | tee build.log
	echo -n "Waiting for user.... press RETURN to continue..." && read
	buildImage
	dateStr=`date +"%d_%m_%Y-%H_%M_%S"`
	RELEASE_DIR_PATH=$BUILD_PWD/releases/$dateStr
	mkdir $RELEASE_DIR_PATH
	mkdir $RELEASE_DIR_PATH/revisions

	cp $DESTINATION_PATH/archos.ext4.update $RELEASE_DIR_PATH/
	cp $CYANOGEN_PRODUCT_PATH/kernel $RELEASE_DIR_PATH/zImage
	cp initramfs.cpio.lzo $RELEASE_DIR_PATH/initramfs.cpio.lzo

	git rev-parse HEAD >$RELEASE_DIR_PATH/revisions/rev_buildRepo.txt
	callRepo repo manifest -o "$RELEASE_DIR_PATH/revisions/manifest.xml" -r
	cd android_injection
	git rev-parse HEAD >$RELEASE_DIR_PATH/revisions/rev_android_injection.txt
	
	cd $CYANOGEN_BASE_PATH
	LAST_REV_FILE=$RELEASE_DIR_PATH/revisions/lastRevs.txt
	echo "Creating revision file from current state for release..."
	repo forall -c 'echo "`pwd`|`git rev-parse HEAD`"' >$LAST_REV_FILE
;;
"cherryPicks")
	applyCherryPicks
;;
*)
	echo "Command $1 not supported"
;;
esac
